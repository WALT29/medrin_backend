"""Initial Migration

Revision ID: 4fecafab4d3d
Revises: 
Create Date: 2024-11-20 00:53:15.216330

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4fecafab4d3d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('job_limit', sa.Integer(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('job_seeker', 'organisation', 'recruiter', name='roleenum'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_blacklisted_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobseekers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('cv', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_jobseekers_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('organisations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('logo', sa.Text(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('mission', sa.String(), nullable=True),
    sa.Column('vision', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_organisations_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('company_subscription',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organisations.id'], name=op.f('fk_company_subscription_organization_id_organisations')),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_company_subscription_plan_id_plans')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('educations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('qualification', sa.String(), nullable=True),
    sa.Column('course', sa.String(), nullable=True),
    sa.Column('level', sa.Enum('certificate', 'diploma', 'degree', 'masters', 'phd', name='educationlevelenum'), nullable=True),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_educations_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('organisation', sa.String(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_experiences_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organisation_id', sa.UUID(), nullable=True),
    sa.Column('industry', sa.Enum('agriculture', 'banking_finance', 'building_construction', 'business', 'customer_service', 'government', 'healthcare', 'hospitality', 'human_resource', 'it_software', 'legal', 'marketing_communication', 'project_management', 'teaching', name='industryenum'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('level', sa.Enum('internship', 'entry_level', 'mid_level', 'senior_level', name='joblevelenum'), nullable=True),
    sa.Column('job_type', sa.Enum('freelance', 'full_time', 'part_time', name='jobtypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], name=op.f('fk_jobs_organisation_id_organisations')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('transaction_reference', sa.String(), nullable=False),
    sa.Column('payment_status', sa.String(), nullable=False),
    sa.Column('organisation_id', sa.UUID(), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], name=op.f('fk_payments_organisation_id_organisations')),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_payments_plan_id_plans')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_reference')
    )
    op.create_table('recruiters',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('organisation_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], name=op.f('fk_recruiters_organisation_id_organisations')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_recruiters_user_id_users')),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('applications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jobseeker_id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='applicationstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_applications_job_id_jobs')),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['jobseekers.id'], name=op.f('fk_applications_jobseeker_id_jobseekers')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_benefits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('benefits', sa.Text(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_job_benefits_job_id_jobs')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_job_requirements_job_id_jobs')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_responsibilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('responsibilities', sa.Text(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_job_responsibilities_job_id_jobs')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shortlisted_applications',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], name=op.f('fk_shortlisted_applications_application_id_applications')),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk_shortlisted_applications_job_id_jobs')),
    sa.PrimaryKeyConstraint('job_id', 'application_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shortlisted_applications')
    op.drop_table('job_responsibilities')
    op.drop_table('job_requirements')
    op.drop_table('job_benefits')
    op.drop_table('applications')
    op.drop_table('recruiters')
    op.drop_table('payments')
    op.drop_table('jobs')
    op.drop_table('experiences')
    op.drop_table('educations')
    op.drop_table('company_subscription')
    op.drop_table('organisations')
    op.drop_table('jobseekers')
    op.drop_table('blacklisted_tokens')
    op.drop_table('users')
    op.drop_table('plans')
    # ### end Alembic commands ###
